{"version":3,"sources":["imgs/cetyslogo.png","imgs/req1.PNG","pages/loadData.js","components/knn.js","components/selecter.js","components/graphSelector.js","components/graph.js","pages/main.js","App.js","reportWebVitals.js","index.js"],"names":["loadData","state","csvFile","undefined","columnDefs","handleChange","event","setState","csvfile","target","files","importCSV","Papa","parse","complete","results","saveData","header","dynamicTyping","alert","data","pop","i","meta","length","push","headerName","toString","field","props","history","pathname","columnas","datos","className","id","src","logoCetys","type","name","placeholder","onChange","this","onClick","requ1","React","Component","KNN","new_x","Object","pred","x","Array","predictors","p","predict","labels","x1","x2","math","map","nb_distance","k_nearest_neighbours","k_neighbours_label","nb_distance_clone","label_counter","y","_data","X","size","console","log","norm","copyWithin","knn","indexOf","splice","index","error","inputBoxes","Fragment","onChangeNewX","bind","e","key","value","renderForm","onClickPredict","Selecter","labelsHtml","checkBoxes","columns","onChangePredictors","selecterCallback","includes","indice","label","htmlFor","onChangeLabel","graphSelector","returnData","sendDataToParent","Graph","classes","c","xlabel","ylabel","self","color","Math","floor","random","xvals","yvals","uniqueClasses","filter","onlyUnique","newpairs","classified_pairs","item","getRandomColor","legendText","showInLegend","markerSize","toolTipContent","dataPoints","point","options","theme","animationEnabled","zoomEnabled","title","text","axisX","crosshair","enabled","snapToDataPoint","axisY","legend","verticalAlign","horizontalAlign","pairs_creator","main","xnew","ynew","k","regresarAload","replace","getColumnsData","columnsName","obj","num","col","location","x_1","x_2","encoder","newpoint","parseFloat","style","background","height","width","rowData","pagination","graphSelectorCallbackX2","graphSelectorCallbackX1","App","path","component","LoadData","Main","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17ea2731.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cetyslogo.e1730752.png\";","export default __webpack_public_path__ + \"static/media/req1.4de9e402.PNG\";","import React, { Fragment } from 'react';\nimport Papa from 'papaparse';\nimport '../css/loadData.css';\nimport logoCetys from '../imgs/cetyslogo.png';\nimport requ1 from '../imgs/req1.PNG';\n\nclass loadData extends React.Component {\n    state = {\n        csvFile: undefined,\n        columnDefs: []\n    }\n    \n    handleChange = event => {\n        this.setState({\n            csvfile: event.target.files[0]\n        });\n    };\n  \n    importCSV = () => {\n        const { csvfile } = this.state;\n        if(csvfile !== undefined){\n            Papa.parse(csvfile, {\n                complete: (results) => {this.saveData(results)},\n                header: true,\n                dynamicTyping: true\n              });\n        }\n        else{\n            alert('Favor de seleccionar un dataset')\n        }\n    };\n    \n    saveData = (results) => { \n        const { columnDefs } = this.state;\n\n        results.data.pop(); //Quita la observacion nula, y dibujaba punto en (0,0)\n        //Aqui genera las columnas\n        for(let i = 0; i < results.meta['fields'].length; i++){\n            columnDefs.push({headerName: results.meta['fields'][i].toString(), field: results.meta['fields'][i]})\n        }\n\n        this.setState({columnDefs: columnDefs}, () => {\n            this.props.history.push({\n                pathname: \"/main\",\n                data: {\n                    columnas: columnDefs,\n                    datos: results.data\n                }})\n        })\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <div className='backgroundMain'>\n                    <div className='contenedor pt-4'>\n                        <h1>Herramienta interactiva para clasificación por KNN</h1>\n                        <img id='logoCetys' src={logoCetys}></img>\n    \n                        <h3 className='p-3'>Importa tu archivo CSV!</h3>\n                        <input className=\"csv-input\" type=\"file\"  name=\"file\" placeholder={null} onChange={this.handleChange}/>\n                        <p/>\n                        <button onClick={this.importCSV}> Enviar Datos</button>\n\n                        <h4 className='p-3'>Requisitos para un correcto funcionamiento:</h4>\n                        <li>La primera fila del archivo CSV, debe contener el nombre de los predictores. Ejemplo:</li>\n                        <img id='req1' src={requ1}></img>\n                        \n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default loadData;\n","import React from 'react';\nimport * as math from \"mathjs\";\n\nclass KNN extends React.Component {\n\tconstructor(props){\n\t\tsuper(props); \n\t\t/**\n\t\t * this.props.labels\n\t\t * this.props.x\n\t\t * this.props.y\n\t\t * this.props.knn\n\t\t * this.props.predictors\n\t\t */\n\t\tthis.new_x = new Object();\n\t\tthis.state = {\n\t\t\tpred:\"undefined\"\n\t\t}\n\t}\n\n\tonClickPredict(){\n\t\tlet x = new Array();\n\t\tfor(let p of this.props.predictors){\n\t\t\tx.push(this.new_x[p])\n\t\t}\n\t\tconst pred = this.predict(x);\n\t\tthis.setState({pred:this.props.labels[pred]});\n\t}\n\n\tnorm(x1,x2){\n     \treturn math.subtract(x1,x2).map(x=>x**2)\n    }\n\t\n\tpredict(new_x) {\n\t\ttry{\n\t\t\tlet nb_distance = new Array(),\n\t\t\t\tk_nearest_neighbours = new Array(),\n\t\t\t\tk_neighbours_label = new Array(),\n\t\t\t\tnb_distance_clone = new Array(),\n\t\t\t\tlabel_counter = math.zeros(this.props.y.length)._data;\n\t\t\t\n\t\t\t// Calculating distance between 'x' and 'x_i'\n\t\t\tconst X = math.matrix(this.props.x),\n\t\t\t\tsize = X.size();\n\t\t\tif(size.length===1){\n\t\t\t\tconsole.log(this.props.x);\n\t\t\t\tnb_distance = this.norm(this.props.x,new_x[0])//<---new_x=number\n\t\t\t}else if(size.length===2){\n\t\t\t\tfor(let i=0;i<size[1];i++){\n\t\t\t\t\tnb_distance.push(this.norm(math.flatten(math.column(X,i)),new_x));//<---new_x\n\t\t\t\t}\n\t\t\t}\n\t\t\t// picking 'k' nearest neighbours.\n\t\t\tnb_distance_clone = nb_distance.copyWithin()\n\t\t\tfor(let i=0;i<this.props.knn;i++){\n\t\t\t\tk_nearest_neighbours.push(nb_distance_clone.indexOf(math.min(nb_distance)) + i);\n\t\t\t\tnb_distance_clone.splice(k_nearest_neighbours[i],1);\n\t\t\t}\n\n\t\t\t// Getting the label of the 'k' nearest neighbours\n\t\t\tk_neighbours_label = k_nearest_neighbours.map(index=>this.props.y[index]);\n\n\t\t\t// `Predicting`\n\t\t\tfor(let label of k_neighbours_label){\n\t\t\t\tlabel_counter[label] += 1\n\t\t\t}\n\t\t\treturn label_counter.indexOf(math.max(label_counter))\n\t\t}catch(error){\n\t\t\talert(\"No sirve dataset\");\n\t\t}\n\t}\n\n\trenderForm(){\n\t\tlet inputBoxes = new Array();\n\t\t\n\t\tfor(let p of this.props.predictors){\n\t\t\tinputBoxes.push(\n\t\t\t\t<React.Fragment>\t\n\t\t\t\t{p} <input type=\"number\" name={p} onChange={this.onChangeNewX.bind(this)}/>\n\t\t\t\t<br></br>\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t}\n\n\t\t//console.log(this.new_x)\n\t\tconsole.log(this.props.labels)\n\t\tconsole.log(this.new_x)\n\t\t//console.log(this.state.pred)\n\n\t\treturn inputBoxes;\n\t}\n\n\tonChangeNewX(e){\n\t\tconst key = e.target.name;\n\t\tconst value = e.target.value;\n\t\tthis.new_x[key] = value;\n\t}\n\t\t\n\trender(){\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-12 d-flex justify-content-center\">\n\t\t\t\t\t\tPredictors:\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t\t\t{this.renderForm()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary w-50 mt-3\" onClick={this.onClickPredict.bind(this)}>Predict</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t\t\tClase Perteneciente: {this.state.pred}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\nexport default KNN;\n\n\n","import React from 'react'\n\n\nclass Selecter extends React.Component{\n\n\tstate = {\n\t\tlabelsHtml: [],\n\t\tcheckBoxes: []\n\t}\n\n\tcomponentDidMount(){\n\t\tif(this.props.columns.length > 0){\n\t\t\tlet { labelsHtml,checkBoxes } = this.state;\n\t\n\t\t\tlabelsHtml.push(<option value={'Default'} key={'Default'}>Escoge una opcion</option>)\n\n\t\t\tfor(let i = 0; i < this.props.columns.length; i++){\n\t\t\t\tlabelsHtml.push(<option value={this.props.columns[i]['field']}>{this.props.columns[i]['field']}</option>)\n\t\t\t\tcheckBoxes.push(\n\t\t\t\t\t<div className=\"form-check form-check-inline\">\n\t\t\t\t\t{this.props.columns[i]['field']}\n\t\t\t\t\t<input className='ml-1' name={this.props.columns[i]['field']} type=\"checkbox\" onChange={this.onChangePredictors.bind(this)}/>\n\t\t\t\t\t</div>);\n\t\t\t}\n\t\n\t\t\tthis.setState({\n\t\t\t\tlabelsHtml: labelsHtml,\n\t\t\t\tcheckBoxes: checkBoxes\n\t\t\t})\n\t\t}\n\t\telse{\n\t\t\tthis.setState({\n\t\t\t\tlabelsHtml: <option value='Nada'>Nullptr</option>,\n\t\t\t\tcheckBoxes: <input type=\"checkbox\"/>\n\t\t\t})\n\t\t}\n\t}\n\n\tonChangeLabel(e){\n\t\t//console.log(e.target.value)\n\t\tthis.props.selecterCallback(this.props.predictors,e.target.value);\n\t}\n\t\t\n\tonChangePredictors(e){\n\t\tlet p = this.props.predictors;\n\t\tif(p.includes(e.target.name)){\n\t\t\tlet indice = p.indexOf(e.target.name)\n\t\t\tp.pop(indice)\n\t\t}else p.push(e.target.name);\n\t\tthis.props.selecterCallback(p,this.props.label);\n\t}\n\n\trender(){\n\t\tconst { labelsHtml, checkBoxes} = this.state;\n\t\treturn(\n\t\t\t<React.Fragment>\n\t\t\t\t<div className= \"row justify-content-center text-center\">\n\t\t\t\t\t<div className='col'>\n\t\t\t\t\t\t<label htmlFor='elSelect'><h6>Selecciona tu respuesta (clasificaciones):</h6></label>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<select name='elSelect' onChange={this.onChangeLabel.bind(this)}>\n\t\t\t\t\t\t\t{ labelsHtml }\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className= \"row justify-content-center text-center\">\n\t\t\t\t\t<div className='col'>\n\t\t\t\t\t\t<label htmlFor='losCheckboxes'><h6>Marca los predictores a usar (X):</h6></label>\n\t\t\t\t\t\t<label htmlFor='losCheckboxes'><h6>*Nota: Se debe seleccionar en orden descendiente ↓ y deseleccionar en orden ascendente ↑*</h6></label>\n\t\t\t\t\t\t<div name ='losCheckboxes' className='pt-2'>\n\t\t\t\t\t\t\t{ checkBoxes }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\n\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nexport default Selecter;\n","import React, { Component } from 'react'\n\nclass graphSelector extends Component {\n\n\tstate = {\n\t\tlabelsHtml: [],\n\t\tcheckBoxes: []\n\t}\n\n    componentDidMount(){\n\t\tif(this.props.columns.length > 0){\n\t\t\tlet { labelsHtml,checkBoxes } = this.state;\n\t\t\t\n\t\t\tlabelsHtml.push(<option value={'Default'} key={'Default'}>Escoge una opcion</option>)\n\t\t\t\n\t\t\tfor(let i = 0; i < this.props.columns.length; i++){\n\t\t\t\tlabelsHtml.push(<option value={this.props.columns[i]['field']} key={this.props.columns[i]['field']}>{this.props.columns[i]['field']}</option>)\n\t\t\t\tcheckBoxes.push(<div className='d-flex justify-content-around'>{this.props.columns[i]['field']}<input name={this.props.columns[i]['field']} type=\"checkbox\" onChange={this.onChangePredictors} /></div>);\n\t\t\t}\n\t\n\t\t\tthis.setState({\n\t\t\t\tlabelsHtml: labelsHtml,\n\t\t\t\tcheckBoxes: checkBoxes\n\t\t\t})\n\t\t}\n\t\telse{\n\t\t\tthis.setState({\n\t\t\t\tlabelsHtml: <option value='Nada'>Nullptr</option>,\n\t\t\t\tcheckBoxes: <input type=\"checkbox\"/>\n\t\t\t})\n\t\t}\n\t}\n\t\n\tsendDataToParent(e){\n\t\t//console.log(e.target.value)\n\t\tthis.props.returnData(e.target.value) //Callback, params => Access in parent\n\t}\n    \n    render() {\n        const { labelsHtml } = this.state;\n        return (\n            <React.Fragment>\n\t\t\t\t<select onChange={this.sendDataToParent.bind(this)}>\n\t\t\t\t\t{ labelsHtml }\n\t\t\t\t</select>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default graphSelector;\n","import React from 'react';\nimport {CanvasJSChart} from 'canvasjs-react-charts'\n\n//recibe     x: valores x , y: valores y , c: las clasificaciones , xlabel: descripcion , ylabel: descripcion\nclass Graph extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tclasses: this.props.c,\n\t\t\txlabel: this.props.xlabel,\n\t\t\tylabel: this.props.ylabel\n\t\t\t//newdata: this.pairs_creator()\n\t\t}\n    }\n    \n\tonlyUnique(value, index, self) {\n\t\treturn self.indexOf(value) === index;\n\t}\n\n\tgetRandomColor() {\n\t\tvar letters = '0123456789ABCDEF';\n\t\tvar color = '#';\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t  color += letters[Math.floor(Math.random() * 16)];\n\t\t}\n\t\treturn color;\n\t}\n\n    pairs_creator(){\n\t\tvar xvals = this.props.x;\n\t\tvar yvals = this.props.y;\n\t\tvar classes = this.props.c;\n\t\tvar uniqueClasses = classes.filter(this.onlyUnique);\n\t\tvar newpairs = new Array();\n\t\tvar classified_pairs = new Array();\n\n\t\tfor (var i = 0; i < xvals.length; i++) {\n\t\t\tnewpairs.push({x: xvals[i],y: yvals[i], c: classes[i]})\n\t\t}\n\n\t\tfor (var i = 0; i < uniqueClasses.length; i++) {\n\t\t\tclassified_pairs[i] = newpairs.filter(function(item){\n\t\t\t\t\treturn item.c == uniqueClasses[i];\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\n\t\tvar data = new Array();\n\n\t\t\n\t\tfor (var i = 0; i < classified_pairs.length; i++) {\n\t\t\tdata.push(\n\t\t\t\t{\n\t\t\t\t\t\ttype: \"scatter\",\n\t\t\t\t\t\tcolor: this.getRandomColor(),\n\t\t\t\t\t\tlegendText: \"Clase: \" + uniqueClasses[i],\n\t\t\t\t\t\tshowInLegend: \"true\",\n\t\t\t\t\t\tmarkerSize: 5,\n\t\t\t\t\t\ttoolTipContent: this.props.xlabel+\": {x}  \"+ this.props.ylabel +\": {y}\",\n\t\t\t\t\t\tdataPoints: classified_pairs[i]\n\t\t\t\t}\n\t\t\t)\n\t\t}\t\t\t\t\n\t\tdata.push(\n\t\t\t{\n\t\t\t\t\ttype: \"scatter\",\n\t\t\t\t\tcolor: this.getRandomColor(),\n\t\t\t\t\tlegendText: \"Punto de prueba\",\n\t\t\t\t\tshowInLegend: \"true\",\n\t\t\t\t\tmarkerSize: 5,\n\t\t\t\t\ttoolTipContent: this.props.xlabel+\": {x}  \"+ this.props.ylabel +\": {y}\",\n\t\t\t\t\tdataPoints: [this.props.point]\n\t\t\t}\n\t\t)\n\t\t\n\t\treturn data;\n\t}\n\n\trender() {\n\t\t//console.log(this.props.xnew)\n\t\t//console.log(this.props.ynew)\n\t\t//console.log('graph se renderiza')\n\n\t\tconst options = {\n\t\t\ttheme: \"light2\",\n\t\t\tanimationEnabled: true,\n\t\t\tzoomEnabled: true,\n\t\t\ttitle:{\n\t\t\t\ttext: this.props.xlabel + \" vs \" + this.props.ylabel\n\t\t\t},\n\t\t\taxisX: {\n\t\t\t\ttitle: this.props.xlabel,\n\t\t\t\tcrosshair: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tsnapToDataPoint: true\n\t\t\t\t}\n\t\t\t},\n\t\t\taxisY:{\n\t\t\t\ttitle: this.props.ylabel,\n\t\t\t\tcrosshair: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tsnapToDataPoint: true\n\t\t\t\t}\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\tverticalAlign: \"bottom\",\n\t\t\t\thorizontalAlign: \"left\"\n\t\t  \n\t\t\t  },\n\t\t\tdata: this.pairs_creator()\n        }\n        \n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<CanvasJSChart options = {options} />\t\n\t\t\t</React.Fragment>\t\t\n\t\t  );\n\t\t}\n}\nexport default Graph;","import React, { Component } from 'react'\nimport KNN from \"../components/knn\";\nimport Selecter from \"../components/selecter\";\nimport GraphSelector from \"../components/graphSelector\";\nimport Graph from \"../components/graph\";\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport '../css/main.css';\n\nclass main extends Component {\n\n\tstate = {\n\t\tcolumns: [],\n\t\tdata: [],\n\t\tpredictors: [],\n\t\tlabel: \"\",\n\t\txlabel: \"\",\n\t\tylabel: \"\",\n\t\tx: [],\n\t\ty: [],\n\t\tc: [],\n\t\txnew: 1,\n\t\tynew: 1,\n\t\tk: 3\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.location.data == null) {\n\t\t\talert('No se pudo obtener ningun dato, reedireccionando....');\n\t\t\tthis.props.history.push({\n\t\t\t\tpathname: '/loaddata'\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\t//console.log(this.props.location.data.columnas)\n\t\t\tthis.setState({\n\t\t\t\tcolumns: this.props.location.data.columnas,\n\t\t\t\tdata: this.props.location.data.datos\n\t\t\t});\n\t\t}\n\t}\n\n\tregresarAload = () => {\n\t\tthis.props.history.replace({\n\t\t\tpathname: \"/loaddata\"\n\t\t})\n\t}\n\n\tgetColumnsData = (columnsName) => {\n\t\tlet obj = new Object(), num = 0;\n\t\tfor (let col of columnsName) {\n\t\t\tobj[col] = new Array();\n\t\t\tfor (let data of this.state.data) {\n\t\t\t\tnum = (data[col] == null || data[col] == undefined) ? 0 : data[col];\n\t\t\t\tobj[col].push(num);\n\t\t\t}\n\t\t}\n\t\treturn obj;\n\t}\n\n\tselecterCallback(predictors, label) {\n\t\tthis.setState({ predictors: predictors, label: label }, () => { \n\t\t\t//console.log(this.state.predictors)\n\t\t});\n\t}\n\n\tgraphSelectorCallbackX1(ylabel) {\n\t\tthis.setState({\n\t\t\tylabel: ylabel\n\t\t}, () => {\n\t\t\tthis.setState({\n\t\t\t\ty: this.getColumnsData([this.state.ylabel])\n\t\t\t})\n\t\t});\n\t}\n\n\tgraphSelectorCallbackX2(xlabel) {\n\t\tthis.setState({\n\t\t\txlabel: xlabel\n\t\t}, () => {\n\t\t\tthis.setState({\n\t\t\t\tx: this.getColumnsData([this.state.xlabel])\n\t\t\t});\n\t\t});\n\t}\n\n\tonlyUnique(value, index, self) {\n\t\treturn self.indexOf(value) === index;\n\t}\n\n\tencoder(label) {\n\t\tvar classes = label;\n\t\tvar uniqueClasses = classes.filter(this.onlyUnique);\n\t\tvar classified_pairs = new Array();\n\n\t\tfor (var i = 0; i < classes.length; i++) {\n\t\t\tclassified_pairs[i] = uniqueClasses.indexOf(classes[i]);\n\t\t}\n\t\treturn classified_pairs;\n\t}\n\n\n\trender() {\n\t\tconst x_1 = this.getColumnsData([this.state.xlabel])[this.state.xlabel],\n\t\t\tx_2 = this.getColumnsData([this.state.ylabel])[this.state.ylabel],\n\t\t\tc = this.getColumnsData([this.state.label])[this.state.label],\n\t\t\ty = this.encoder(c),\n\t\t\tlabels = c.filter(this.onlyUnique),\n\t\t\tnewpoint = {x: parseFloat(this.state.xnew), y: parseFloat(this.state.ynew)};\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"mainContenedor\">\n\t\t\t\t\t<div className=\"container\" id='genContenedor'>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"jumbotron\" style={{ background: 'transparent' }}>\n\t\t\t\t\t\t\t\t<h1 className=\"display-4\">Herramienta interactiva para clasificación por KNN</h1>\n\t\t\t\t\t\t\t\t<p className=\"lead\">Esta herramienta facilita el realizar KNN desde una aplicación facil y util. Las opciones intuitivas te guiaran a lo largo del proceso.</p>\n\t\t\t\t\t\t\t\t<hr className=\"my-3\"></hr>\n\n\t\t\t\t\t\t\t\t<p>Desarrollado por: Gerardo Meneses, Pablo Diaz, Diego Garibay y Kevin Huerta</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div style={{ height: '500px', width: '100%' }} className=\"ag-theme-alpine\">\n\t\t\t\t\t\t\t<AgGridReact\n\t\t\t\t\t\t\t\tcolumnDefs={this.state.columns}\n\t\t\t\t\t\t\t\trowData={this.state.data}\n\t\t\t\t\t\t\t\tpagination={true}>\n\t\t\t\t\t\t\t</AgGridReact>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<button className=\"btn btn-primary btn-lg\" onClick={this.regresarAload}>Usar otro dataset</button>\n\n\t\t\t\t\t\t<hr className=\"my-4\" color='yellow'></hr>\n\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-6\">\n\t\t\t\t\t\t\t\t<div>Cantidad de vecinos:</div>\n\t\t\t\t\t\t\t\t<input type='numeric' value={this.state.k} onChange={ (e) => { this.setState({ k: e.target.value})}}/>\n\n\t\t\t\t\t\t\t\t<KNN x={x_1} y={y} knn={this.state.k} predictors={this.state.predictors} labels={labels} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-6\">\n\t\t\t\t\t\t\t\t<Selecter columns={this.props.location.data.columnas} predictors={this.state.predictors} label={this.state.label} selecterCallback={this.selecterCallback.bind(this)} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<hr className=\"my-4\" color='yellow'></hr>\n\n\t\t\t\t\t\t<div className=\"row align-items-center\" >\n\n\t\t\t\t\t\t\t<div className=\"col-4\">\n\t\t\t\t\t\t\t\t<div>Elige tus predictores para gráficar:</div>\n\t\t\t\t\t\t\t\t<br></br>\n\n\t\t\t\t\t\t\t\t<div> Predictor en X: <GraphSelector columns={this.props.location.data.columnas} returnData={this.graphSelectorCallbackX2.bind(this)}></GraphSelector></div>\n\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t<div> Predictor en Y: <GraphSelector columns={this.props.location.data.columnas} returnData={this.graphSelectorCallbackX1.bind(this)}></GraphSelector></div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t<div>Gráfica tu punto:</div>\n\t\t\t\t\t\t\t\t<br></br>\n\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\tX: <input type='numeric' value={this.state.xnew} onChange={ (e) => { this.setState({ xnew: e.target.value})}}/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\tY: <input type='numeric' value={this.state.ynew} onChange={ (e) => { this.setState({ ynew: e.target.value})}}/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-8\">\n\t\t\t\t\t\t\t\t<Graph xlabel={this.state.xlabel} ylabel={this.state.ylabel} x={x_1} y={x_2} c={c} point={newpoint}></Graph>\n\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nexport default main;\n","import './App.css';\nimport React from 'react';\nimport { BrowserRouter, Route , Redirect} from 'react-router-dom';\nimport LoadData from './pages/loadData.js';\nimport Main from './pages/main.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Route path=\"/loaddata\" component={LoadData}></Route>\n        <Route path=\"/main\" component={Main}></Route>\n        <Route path=\"/\" component={this}></Route>\n        <Redirect to='/loaddata' />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}